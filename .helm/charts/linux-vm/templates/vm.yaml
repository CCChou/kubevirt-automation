{{- range .Values.vms }}
---
apiVersion: kubevirt.io/v1
kind: VirtualMachine
metadata:
  name: {{ .name }}
  namespace: {{ $.Release.Namespace }}
spec:
  dataVolumeTemplates:
    {{- range .disks }}
    - apiVersion: cdi.kubevirt.io/v1beta1
      kind: DataVolume
      metadata:
        name: {{ .name }}
      spec:
        {{- if eq .type "image" }}
        sourceRef:
          kind: DataSource
          name: {{ .datasourceName }}
          namespace: {{ .datasourceNamespace }}
        storage:
          resources:
            requests:
              storage: {{ .size }}
        {{- else if eq .type "pvc" }}
        source:
          pvc:
            name: {{ .datasourceName }}
            namespace: {{ .datasourceNamespace }}
        storage:
          resources:
            requests:
              storage: {{ .size }}
        {{- else if eq .type "blank" }}
        source:
          blank: {}
        storage:
          resources:
            requests:
               storage: {{ .size }}
          storageClassName: {{ .storageclassName }}
        {{- end }}
    {{- end }}
  runStrategy: RerunOnFailure
  template:
    spec:
      architecture: amd64
      domain:
        cpu:
          cores: 1
          sockets: {{ .cpu }}
          threads: 1
        devices:
          disks:
            {{- range .disks }}
            - disk:
                bus: virtio
              name: {{ .name }}
            {{- end }}
            - disk:
                bus: virtio
              name: cloudinitdisk
          interfaces:
          {{- range .networks }}
            - name: {{ .name }}
              model: virtio
              {{- if eq .type "bridge" }}
              bridge: {}
              {{- else }}
              masquerade: {}
              {{- end }}
          {{- end }}
        memory:
          guest: {{ .memory }}
      networks:
      {{- range .networks }}
        {{- if eq .type "bridge" }}
        - multus:
            networkName: {{ .name }}
          name: {{ .name }}
        {{- else }}
        - name: {{ .name }}
          pod: {}
        {{- end }}
      {{- end }}
      volumes:
        {{- range .disks }}
        {{- if eq .name "rootdisk" }}
        - dataVolume:
            name: {{ .name }}
          name: rootdisk
        {{- else }}
        - dataVolume:
            name: {{ .name }}
          name: {{ .name }}
        {{- end }}
        {{- end }}
        - cloudInitNoCloud:
            userData: |-
              #cloud-config
              user: fedora
              password: redhat
              chpasswd: { expire: False }
          name: cloudinitdisk
{{- end }}